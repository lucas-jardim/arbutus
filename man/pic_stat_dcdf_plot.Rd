% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting-fxns.R
\name{pic_stat_dcdf_plot}
\alias{pic_stat_dcdf_plot}
\title{Plot empirical cumulative distribution of contrasts versus a normal
distribution}
\usage{
pic_stat_dcdf_plot(
  x,
  xlab = "Sample quantiles",
  ylab = expression(hat(F)[n](x)),
  col = NA,
  las = 1,
  lwd = 2,
  legend = TRUE,
  legend.obs = "Contrasts",
  legend.norm = "Normal",
  cex = 1,
  ...
)
}
\arguments{
\item{x}{a \code{unit.tree} object (see \code{\link{make_unit_tree}}).}

\item{xlab}{x-axis label. Defaults to "Sample quantiles".}

\item{ylab}{y-axis label. Defaults to "expression(hat(F)[n](x))".}

\item{col}{plot colours. The first colour is the colour of the cdf of the
contrats and the second is that of the normal distribution. If no argument,
uses default colours.}

\item{las}{plot parameter (see \code{\link{par}}). Defaults to 1.}

\item{lwd}{plot parameter (see \code{\link{par}}). Defaults to 2.}

\item{legend}{logical, whether legend should be plotted.}

\item{legend.obs}{legend label for distribution of contrasts. Defaults to
"Contrats"}

\item{legend.norm}{legend label for normal distribution. Defaults to
"Normal"}

\item{cex}{plot parameter for legend (see \code{link{par}}). Defaults to 1.}

\item{...}{additional arguments to be passed to \code{\link{plot}}.}
}
\description{
Plot the empirical cumulative distribution of the contrats
derived from a rescaled 'unit.tree' against the ecdf of a normal distribution
with mean 0 and sd of the observed contrasts.
}
\details{
This function plots the empirical cumulative distribution function
of the contrasts computed on the unit tree against that of a normal
distribution. The empirical sd of the contrasts is used rather than the
expected (i.e., 1) to distinguish non-normailty vs. inflated/deflated
variance.

The D-statistics from the KS test (used in \code{\link{pic_stat_dcdf}}) is
the maximum distance between the two curves. This is a default test
test statistic in \code{\link{calculate_pic_stat}}.

If the model is adequate, the two curves should line up.

The function can currently only take a single unit.tree (does not
integrate across unit.trees)
}
\examples{
## finch data
data(finch)
phy <- finch$phy
data <- finch$data[,1]

u <- make_unit_tree(phy, data=data)

pic_stat_dcdf_plot(u)

}
\seealso{
\code{\link{make_unit_tree}}, \code{\link{calculate_pic_stat}},
\code{\link{pic_stat_dcdf}}
}
