% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary-stats.R
\name{calculate_pic_stat}
\alias{calculate_pic_stat}
\title{Calculate test statistics on a unit tree}
\usage{
calculate_pic_stat(unit.tree, stats = NULL)
}
\arguments{
\item{unit.tree}{a \code{unit.tree} object or list of unit.trees}

\item{stats}{a named list of test statistics to calculate on the unit.tree.
If no \code{stats} argument supplied, default test statistics are used.}
}
\value{
A data.frame with the calculated test statistics across all unit.trees provided.
}
\description{
Calculates a set of test statistics on the contrasts included with a 'unit.tree' object.
}
\details{
This function can be applied to either a single 'unit.tree' of object or a list of 'unit.tree' objects.
If \code{stats=NULL} default test statistics are used. The default test statistics are the following:
 \enumerate{
  \item{m.sig: }{The mean of the squared contrasts. This is equivalent to the REML estimate of sigsq.}

  \item{c.var: }{The coefficient of variation of the absolute value of the contrasts.}

  \item{s.var: }{The slope of a linear model fit between the contrasts and their expected variances.}

  \item{s.asr: }{The slope of a linear model fit between the contrasts and their inferred ancestral state.}

  \item{s.hgt: }{The slope of a linear model fit between the contrasts and the node height at which they were calculated.}

  \item{d.cdf: }{The D-statistic from a KS test comparing the distribution of the contrasts to a normal distribution  with mean 0 and variance equal to the square root of the squared mean of the contrasts.}
 }
User defined test statistics can be supplied as a named list of functions (see examples). The functions supplied
must take a unit.tree as argument and perform an operation on at least one of the elements of the object
(see \code{\link{make_unit_tree}} for details).
}
\examples{
data(finch)
phy <- finch$phy
dat <- finch$data[,"wingL"]
unit.tree <- make_unit_tree(phy, data=dat)

## use default statistics
test.stat <- calculate_pic_stat(unit.tree, stats=NULL)
test.stat

## user defined statistics
mean.con <- function(x) mean(x$pics[,"contrasts"])
max.con <- function(x) max(x$pics[,"contrasts"])

test.stat.user <- calculate_pic_stat(unit.tree,
                    stats=list(mean = mean.con, max = max.con))
test.stat.user
 
}
\seealso{
\code{\link{default_pic_stat}}, \code{\link{pic_stat_msig}}, \code{\link{pic_stat_cvar}}, \code{\link{pic_stat_svar}}, \code{\link{pic_stat_shgt}}, \code{\link{pic_stat_sasr}}, \code{\link{pic_stat_dcdf}}
}
