tree3$node.label <- c(1:(length(tree3$edge.length))-1)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$edge.length))-1)
plot.phylo(tree3, show.node.label = TRUE)
View(tree3)
tree3$node.label <- c(1:(length(tree3$tip.label))-1)
plot.phylo(tree3, show.node.label = TRUE)
1:(length(tree3$tip.label))-1
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
tree3[["edge"]]
get.desc.of.node(16, tree3)
tree3$edge[which(get.desc.of.node(16, tree3))]
tree3$edge[(get.desc.of.node(16, tree3))]
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3[["edge.length"]]
tree3[["edge"]]
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node),2)
}
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3$edge[,1] == 16
which(tree3$edge[,1] == 16)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node)])
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 2
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 2
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(17, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(length(tree3$tip.label) + 12, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
#Node number = number of species + number
unique(tree3$node.label)
?OUwie()
View(sim_fit)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
128-64
-35
64-35
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 28))
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 29))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
View(df)
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 29))
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 38))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
View(df)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90, 0.23), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_dat)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10,1e-10), sigma.sq = c(0.45,0.90,0.23), theta0 = 1.0, theta = c(0,0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
sim_fit[["solution"]]
sim_fit$solution["sigma.sq"]
sim_fit$solution["sigma.sq",]
sim_fit$solution["sigma.sq",] %>% list()
sim_fit$solution["sigma.sq",] %>% list(sigsq = .x)
sim_fit$solution["sigma.sq",] %>% list(sigsq = .)
sim_fit$solution.se
list(sigsq = sim_fit$solution["sigma.sq",], SE = sim_fit$solution.se)
a <- list(sigsq = sim_fit$solution["sigma.sq",], SE = sim_fit$solution.se)
a < 0
a$sigsq < 0
if(a$sigsq < 0) print(" Oh no!")
if(any(a$sigsq < 0)) print(" Oh no!")
if(any(a$sigsq > 0)) print(" Oh no!")
if(any(c(1,2,0) > 0)) print(" Oh no!")
if(any(c(1,2,0) > 0)) print("Oh no!")
length(a$sigsq)
View(tree3)
tree3$node.label[1]
tree3$node.label[4]
tree2$node.label[4]
a$sigsq[1]
a$sigsq[2]
tree3[["edge"]]
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
View(a)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
a$sigsq <- c(0.01, 1, 2)
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
a$sigsq <- c(0.5, 1, 2)
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
library(arbutus)
devtools::document()
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
arbutus::arbutus(sim_fit)
View(sim_fit)
sim_fit[["solution"]]
make_unit_tree(sim_fit)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
arbutus::arbutus(sim_fit)
length(a$sigsq)
1:3
View(sim_fit)
devtools::load_all(".")
arbutus::arbutus(sim_fit)
devtools::load_all()
arbutus::arbutus(sim_fit)
View(sim_dat)
View(sim_fit)
library(arbutus)
arbutus::arbutus(sim_fit)
typeof(sim_fit)
class(sim_fit)
View(sim_fit)
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
arbutus::arbutus(sim_fit)
devtools::load_all(".")
arbutus::arbutus(sim_fit)
devtools::load_all(".")
arbutus::arbutus(sim_fit)
devtools::load_all(".")
arbutus::arbutus(sim_fit)
sim_fit[["solution"]]
library(arbutus)
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#arbutus::arbutus(sim_fit)
make_unit_tree(sim_fit)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
model_info(sim_fit)
model_pars(sim_fit)
model_info(sim_fit)
make_model_phylo(model_info(sim_fit))
a <- make_model_phylo(model_info(sim_fit))
View(a)
a <- model_info(sim_fit)
View(a)
a <- make_model_phylo.fitOU(model_info(sim_fit))
devtools::document()
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
devtools::load_all(".")
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
a$data$data
a$type
a$data$phy
a$pars
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 38))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10,1e-10), sigma.sq = c(0.45,0.90,0.23), theta0 = 1.0, theta = c(0,0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
devtools::document()
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
a <- model_info(sim_fit)
View(a)
detach("package:arbutus", unload = TRUE)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
remove.packages("arbutus", lib="~/R/win-library/4.1")
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
?environment
devtools::missing_s3()
devtools::uninstall()
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
arbutus
test <- make_unit_tree(sim_fit)
View(a)
devtools::load_all()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
View(sim_dat)
View(sim_fit)
View(sim_fit)
sim_fit[["data"]]
sim_fit[["data"]][[2]]
sim_fit[["data"]][[1]]
a$data
a$data[[2]]
a$data[2]
a$data[,2]
a$data[,1]
a$data[1,]
a$data$data
a$data$data[[2]]
a$data$data[2]
a$data$data <- a$data$data[2]
View(a)
devtools::load_all()
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
dim(a$data$data)
b <- a$data$data
b <- a$data$data %>% as.numeric()
a$data$data
class(b)
typeof(b)
c <- 1:6
dim(c)
a$data$data[[1]]
a$data$data[[1]] %>% dim()
devtools::load_all()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
View(a)
a$data$data <- a$data$data[[1]]
View(a)
devtools::reload()
devtools::load_all()
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
model_data.OUwie <- function(fit, ...) {
fit$data$data <- fit$data$data[[2]]
ret <- list(phy=fit$phy, data=fit$data)
ret
}
test <- model_data.OUwie(sim_fit)
View(test)
View(sim_fit)
devtools::load_all()
devtools::load_all()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 38))
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree <- sim.bdtree(n = 128, seed = 69)
plot(tree)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 38))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10,1e-10), sigma.sq = c(0.45,0.90,0.23), theta0 = 1.0, theta = c(0,0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
sim_fit$data[,2]
sim_fit$data
sim_fit$data[[2]]
sim_fit$data[2]
test <- sim_fit$data[2]
View(test)
sim_fit$data[,2]
sim_fit$data[[,2]]
sim_fit$data[[2]]
sim_fit$data[,1]
sim_fit$data[,2]
sim_fit$data[,2]
sim_fit$data[[2]]
View(test)
test$data...3.
test[1]
sim_fit$data[2][1]
devtools::load_all()
library(arbutus)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
test <- sim_fit$data[2][1]
View(test)
test <- sim_fit$data[2]
test <- sim_fit$data[[2]]
names(test) <- names(sim_fit$data)
names(sim_fit$data)
names(sim_fit$data[2])
rownames(sim_fit$data)
names(test) <- rownames(sim_fit$data)
dim(test)
a <- sim_fit$data[[2]]
names(a) <- rownames(sim_fit$data)
devtools::load_all()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
class(sim_fit) <- "OUwie"
arbutus::arbutus(sim_fit)
#make_unit_tree(sim_fit)
