library(geiger)
library(OUwie)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
plot(tree)
#Make nodes correspond to selective regimes
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree2 <- sim.bdtree(n = 128, seed = 69)
plot(tree)
plot(tree2)
#tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree <- sim.bdtree(n = 128, seed = 69)
plot(tree)
#Make nodes correspond to selective regimes
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
View(sim_fit)
#Make nodes correspond to selective regimes
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
sim_fit$solution
#Check distribution of estimates
fit_distribution <- replicate(OUwie(phy = tree, data = sim_dat, model = "BMS"))
#Check distribution of estimates
fit_distribution <- replicate(500 ,OUwie(phy = tree, data = sim_dat, model = "BMS", quiet = TRUE))
#Check distribution of estimates
fit_distribution <- replicate(500 ,OUwie(phy = tree, data = sim_dat, model = "BMS", quiet = TRUE, warn = FALSE))
View(fit_distribution)
fit_distribution[,5]
fit_distribution[5,]
solutions <- fit_distribution[7,]
View(solutions)
solutions[[1]]
solutions[[1]][2,]
get_sigma <- function(tbl){
tbl[2,]
}
get_sigma(solutions[[1]])
get_sigma <- function(tbl){
res <- tbl[2,]
res
}
get_sigma(solutions[[1]])
sigmas <- map_df(solutions, get_sigma)
View(sigmas)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree <- sim.bdtree(n = 128, seed = 69)
plot(tree)
#Make nodes correspond to selective regimes
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
arbutus
library(arbutus)
arbutus
model_info()
model_info(sim_dat)
model_info(sim_fit)
model_info
UseMethod
?UseMethod
View(sim_fit)
?get
?attr
attr(sim_fit$model)
sim_fit$model
coef
?coef
coef(OUwie)
?setdiff
?switch
geo=get(data(geospiza))
tmp=treedata(geo$phy, geo$dat)
phy=tmp$phy
dat=tmp$data
#---- STORE RESULTS
brownFit <-  fitContinuous(phy, dat[,"wingL"], SE=NA, control=list(niter=50), ncores=2)
View(brownFit)
coef(brownFit)
sim_fit[["theta"]]
as.list(coef(brownFit))
sim_fit$solution[1]
sim_fit$solution[2]
sim_fit$solution
sim_fit$solution[3]
sim_fit$solution[4]
sim_fit[["phy"]][["node.label"]]
sim_fit[["phy"]][["edge"]]
sim_fit[["regime.weights"]]
plot.phylo(tree, show.node.label = TRUE)
sim_fit[["phy"]][["edge.length"]]
sim_fit[["phy"]][["edge"]]
sim_fit[["phy"]][["node.label"]]
#Make nodes correspond to selective regimes
tree$node.label <- c(1:127)
plot.phylo(tree, show.node.label = TRUE)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make nodes correspond to selective regimes
tree$node.label <- c(1:127)
plot.phylo(tree, show.node.label = TRUE)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(1:9)
plot.phylo(tree2, show.node.label = TRUE)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-4)))
plot.phylo(tree2, show.node.label = TRUE)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree2$edge
tree2$node.label <- c(1:9)
plot.phylo(tree2, show.node.label = TRUE)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree2$node.label
tree2$edge.length[1:2*5]
tree2$edge.length[1:10]
sum(tree2$node.label == 1)
test <- tree2$edge.length
n = sum(tree2$node.label == 1)
test[1:n] <- test[1:n] * 0
test[n+1:length(test)] <- test[n+1:length(test)] * 10
test
length(test)
View(tree2)
tree2[["edge.length"]]
test <- tree2$edge.length
test
test[1:2n] <- test[1:2n] * 0
test[1:2*n] <- test[1:2*n] * 0
test
test <- tree2$edge.length
test[1:(2*n)] <- test[1:(2*n)] * 0
test
test[(2*n+1):length(test)] <- test[(2*n+1):length(test)] * 10
test
length(test)
2*n+1
test[11:18] <- test[11:18] * 10
test
test <- tree2$edge.length
test
test[(2*n+1):length(test)] <- test[(2*n+1):length(test)] * 10
test
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree <- sim.bdtree(n = 128, seed = 69)
plot(tree)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
arbutus(sim_fit)
arbutus::arbutus(sim_fit)
devtools::check()
arbutus::arbutus(sim_fit)
devtools::document()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
#tree <- stree(128, type = "balanced", tip.label = as.character(c(1:128))) %>% compute.brlen()
tree <- sim.bdtree(n = 128, seed = 69)
plot(tree)
#Make nodes correspond to selective regimes
tree2 <- sim.bdtree(n = 10)
tree2$node.label <- c(rep.int(1, 5), rep.int(2, (10-6)))
plot.phylo(tree2, show.node.label = TRUE)
View(tree2)
tree$node.label <- c(rep.int(1, 64), rep.int(2, (128-65)))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
arbutus::arbutus(sim_fit)
library(arbutus)
devtools::build()
devtools::document()
devtools::document()
install.packages("diversitree")
install.packages("caper")
library(arbutus)
library(arbutus)
library(arbutus)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(geiger)
library(OUwie)
library(tidyverse)
plot(tree)
plot(tree2)
View(tree2)
plot.phylo(tree2, show.node.label = TRUE)
tree2[["edge"]]
tree2[["node.label"]]
get.desc.of.node <-
function(node, phy) {
return(phy$edge[which(phy$edge[,1]==node),2])
}
get.desc.of.node(1, tree2)
get.desc.of.node(2, tree2)
get.desc.of.node("1", tree2)
plot.phylo(tree2, show.node.label = TRUE)
tree2$edge[,1]
get.desc.of.node(19, tree2)
get.desc.of.node(16, tree2)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c([1:9])
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1:9)
plot.phylo(tree3, show.node.label = TRUE)
View(tree3)
tree3$node.label <- c(1:(length(tree3$edge.length))-1)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$edge.length))-1)
plot.phylo(tree3, show.node.label = TRUE)
View(tree3)
tree3$node.label <- c(1:(length(tree3$tip.label))-1)
plot.phylo(tree3, show.node.label = TRUE)
1:(length(tree3$tip.label))-1
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
tree3[["edge"]]
get.desc.of.node(16, tree3)
tree3$edge[which(get.desc.of.node(16, tree3))]
tree3$edge[(get.desc.of.node(16, tree3))]
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3[["edge.length"]]
tree3[["edge"]]
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node),2)
}
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3$edge[,1] == 16
which(tree3$edge[,1] == 16)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node)])
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))]
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 2
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 2
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(16, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(17, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 15)
tree3$node.label <- c(1:(length(tree3$tip.label)-1))
plot.phylo(tree3, show.node.label = TRUE)
get.desc.of.node <-
function(node, phy) {
return(which(phy$edge[,1]==node))
}
tree3$edge.length[(get.desc.of.node(length(tree3$tip.label) + 12, tree3))] <- tree3$edge.length[(get.desc.of.node(16, tree3))] * 0.01
plot.phylo(tree3, show.node.label = TRUE)
#Node number = number of species + number
unique(tree3$node.label)
?OUwie()
View(sim_fit)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (128-64)))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
128-64
-35
64-35
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 28))
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 29))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
View(df)
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 29))
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
tree$node.label <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 38))
plot.phylo(tree, show.node.label = TRUE)
#Make dataframe
df_species <- tree$tip.label
df_regime <- c(rep.int(1, 64), rep.int(2, (90-65)), rep.int(3, 39))
df <- data.frame(df_species, df_regime) %>% rename(Genus_species = df_species, Reg = df_regime)
View(df)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10), sigma.sq = c(0.45,0.90, 0.23), theta0 = 1.0, theta = c(0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_dat)
#Now sim
sim_dat <- OUwie.sim(phy = tree, data = df, alpha = c(1e-10,1e-10,1e-10), sigma.sq = c(0.45,0.90,0.23), theta0 = 1.0, theta = c(0,0,0))
#Fit the data
sim_fit <- OUwie(phy = tree, data = sim_dat, model = "BMS")
View(sim_fit)
sim_fit[["solution"]]
sim_fit$solution["sigma.sq"]
sim_fit$solution["sigma.sq",]
sim_fit$solution["sigma.sq",] %>% list()
sim_fit$solution["sigma.sq",] %>% list(sigsq = .x)
sim_fit$solution["sigma.sq",] %>% list(sigsq = .)
sim_fit$solution.se
list(sigsq = sim_fit$solution["sigma.sq",], SE = sim_fit$solution.se)
a <- list(sigsq = sim_fit$solution["sigma.sq",], SE = sim_fit$solution.se)
a < 0
a$sigsq < 0
if(a$sigsq < 0) print(" Oh no!")
if(any(a$sigsq < 0)) print(" Oh no!")
if(any(a$sigsq > 0)) print(" Oh no!")
if(any(c(1,2,0) > 0)) print(" Oh no!")
if(any(c(1,2,0) > 0)) print("Oh no!")
length(a$sigsq)
View(tree3)
tree3$node.label[1]
tree3$node.label[4]
tree2$node.label[4]
a$sigsq[1]
a$sigsq[2]
tree3[["edge"]]
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
View(a)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
a$sigsq <- c(0.01, 1, 2)
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
tree3 <- sim.bdtree(n = 10)
tree3$node.label <- c(1,1,1,1,2,2,2,3,3)
plot.phylo(tree3, show.node.label = TRUE)
n = length(unique(tree3$node.label))
a$sigsq <- c(0.5, 1, 2)
for(reg in 1:n){
for(node in 1:tree3$Nnode){
if(tree3$node.label[node] == reg){
tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] <-    tree3$edge.length[which(tree3$edge[,1] == node + length(tree3$tip.label))] * a$sigsq[reg]^2
}
}
}
plot.phylo(tree3, show.node.label = TRUE)
